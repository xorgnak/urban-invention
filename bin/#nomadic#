#!/usr/bin/env ruby

require 'eventmachine'
require 'sinatra/base'
require 'sinatra-websocket'
require 'faye/websocket'
require 'redis-objects'
require 'json'
require 'kramdown'
require 'paho-mqtt'
require 'cinch'
require 'pry'
require 'crypt/blowfish'
require 'crypt/gost'
require 'ngrok/tunnel'

require 'nomadic'

require 'optparse'

def run r; lambda { `#{r}` }.call; end

@opts = { }
OptionParser.new do |o|
  o.banner = "nomadic banner text"

  o.on("-pPREFIX", "--prefix=PREFIX", "Set network prefix") { |n| @opts[:prefix] = n }
  
  o.on("-hHUB", "--hub=HUB", "Set hub name") { |n| @opts[:hub] = n }
  o.on("-kKEY", "--key=KEY", "Set hub key") { |n| @opts[:key] = n }
  
  o.on("-eEXEC", "--exec=EXEC", "Set hub key") { |n| @opts[:exec] = n }
  o.on("-rRUN", "--run=RUN", "Set hub key") { |n| @opts[:run] = n }
  o.on("-v", "--[no-]verbose", "Run verbosely") { |v| @opts[:verbose] = v }
end.parse!

puts "###########"
puts "# NOMADIC #"
puts "###########"
puts "OPTS: #{@opts}"

if @opts[:verbose] && !@opts[:exec]
  Process.detach(fork { Redis.new.monitor { |e| puts "#{e}" } })
end

if @opts[:exec]
  tools = {
    irc: 'emacs -nw --funcall erc',
    org: 'emacs -nw index.org'
  }
  exec tools[@opts[:exec].to_sym]
else
  Nomadic.begin
  @exec = run(@opts[:run]) if @opts[:run]
  @nomad = Nomadic.nomad
  Pry.start
end

