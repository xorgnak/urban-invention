#!/usr/bin/env ruby

require 'eventmachine'
require 'sinatra/base'
require 'sinatra-websocket'
require 'faye/websocket'
require 'redis-objects'
require 'json'
require 'kramdown'
require 'paho-mqtt'
require 'cinch'
require 'pry'
require 'crypt/blowfish'
require 'crypt/gost'
require 'ngrok/tunnel'

require 'nomadic'

require 'optparse'

def run r; lambda { `#{r}` }.call; end

@opts = { }
OptionParser.new do |o|
  o.banner = "nomadic banner text"
  o.on("-eEXEC", "--exec=EXEC", "Set hub key") { |n| @opts[:exec] = n }
  o.on("-rRUN", "--run=RUN", "Set hub key") { |n| @opts[:run] = n }
  o.on("-v", "--[no-]verbose", "Run verbosely") { |v| @opts[:verbose] = v }
end.parse!

puts "###########"
puts "# NOMADIC #"
puts "###########"
puts "OPTS: #{@opts}"

if @opts[:verbose]
  Process.detach(fork { Redis.new.monitor { |e| puts "#{e}" } })
end

@tools = {
  irc: 'emacs -nw --funcall erc',
  org: 'emacs -nw index.org'
}
def tool t
  if Redis::HashKey("TOOLS").has_key? t.to_s
    run Redis::HashKey("TOOLS")[t.to_s]
  elsif @tools.has_key? t.to_sym
    run @tools[t.to_sym]
  else
    run t.to_s
  end
end

Nomadic.begin
@nomad = Nomadic.nomad
Pry.start

